#!/usr/bin/env ruby
# Script to generate HTML from text file.

$:.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'beedoc'
require 'getoptlong'

# Command line help
HELP = <<'EOF'
beedoc [-h] [-l|-p|-x|-b|-r|-m] [-s css] file
-h       To print this help screen and exit.
-l       To output an HTML file (default).
-p       To output a PDF file.
-x       To output an XML file.
-b       To output a blog entry.
-r       To output a Rest file.
-m       To output a Markdown file.
-s css   To use a given stylesheet.
-e       Embed stylesheet(s) in document.
-d dir   Image directory.
-o file  Output file (if none, result is written to standard output).
file     File to process.
EOF

# parse command line arguments
format = :html
embed = false
stylesheets = []
image_dir = nil
output_file = nil
opts = GetoptLong.new(['--help',       '-h', GetoptLong::NO_ARGUMENT],
                      ['--html',       '-l', GetoptLong::NO_ARGUMENT],
                      ['--pdf',        '-p', GetoptLong::NO_ARGUMENT],
                      ['--xml',        '-x', GetoptLong::NO_ARGUMENT],
                      ['--blog',       '-b', GetoptLong::NO_ARGUMENT],
                      ['--rest',       '-r', GetoptLong::NO_ARGUMENT],
                      ['--mark',       '-m', GetoptLong::NO_ARGUMENT],
                      ['--stylesheet', '-s', GetoptLong::REQUIRED_ARGUMENT],
                      ['--embed',      '-e', GetoptLong::NO_ARGUMENT],
                      ['--img-dir',    '-d', GetoptLong::REQUIRED_ARGUMENT],
                      ['--output',     '-o', GetoptLong::REQUIRED_ARGUMENT])
opts.each do |opt, arg|
  case opt
  when '--help'
    puts HELP
    exit
  when '--html'
    format = :html
  when '--pdf'
    format = :pdf
  when '--xml'
    format = :xml
  when '--blog'
    format = :blog
  when '--rest'
    format = :rest
  when '--mark'
    format = :mark
  when '--stylesheet'
    stylesheets << arg
  when '--embed'
    embed = true
  when '--img-dir'
    image_dir = arg
  when '--output'
    output_file = arg
  end
end
files = ARGV

output = ''
for file in files
  base = File.dirname(file)
  document = Bee::Doc::Document.new(File.read(file), base, format, 
                                    stylesheets, embed, image_dir)
  if format == :html
    output << document.to_html
  elsif format == :pdf
    output << document.to_pdf
  elsif format == :xml
    output << document.to_xml
  elsif format == :blog
    output << document.to_blog
  elsif format == :rest
    output << document.to_rest
  elsif format == :mark
    output << document.to_mark
  else
    raise "Unknown format #{format}"
  end
end
if output_file
  File.open(output_file, 'w') do |file|
    file.write(output)
  end
else
  puts output
end
